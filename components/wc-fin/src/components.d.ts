/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface FinContextGroupPicker {
        /**
          * Bind the window/view the control is place on when Context Selection is made
         */
        "bindSelf": boolean;
        /**
          * Bind views on Context Selection. Only supported when the control is on a window with childViews
         */
        "bindViews": boolean;
        /**
          * Support setting context group by Querystring: ?contextGroupId=green
         */
        "isQueryStringEnabled": boolean;
        /**
          * What should the tooltip show for joining the context group? Use {0} to represent where the group id should go
         */
        "joinText": string;
        /**
          * What should the tooltip show for leaving the context group? Use {0} to represent where the group id should go
         */
        "leaveText": string;
        /**
          * What should the delay be before switching to the list of context groups
         */
        "listDelay": number;
        /**
          * What should the tooltip show for the currently selected context group? Use {0} to represent where the group id should go
         */
        "selectedText": string;
        /**
          * Should the list of available options show when clicked or hovered?
         */
        "showListOnClick": boolean;
        /**
          * What should the no context group selected color be
         */
        "unselectedColor": string;
        /**
          * What should the tooltip show when no context group is selected
         */
        "unselectedText": string;
    }
}
declare global {
    interface HTMLFinContextGroupPickerElement extends Components.FinContextGroupPicker, HTMLStencilElement {
    }
    var HTMLFinContextGroupPickerElement: {
        prototype: HTMLFinContextGroupPickerElement;
        new (): HTMLFinContextGroupPickerElement;
    };
    interface HTMLElementTagNameMap {
        "fin-context-group-picker": HTMLFinContextGroupPickerElement;
    }
}
declare namespace LocalJSX {
    interface FinContextGroupPicker {
        /**
          * Bind the window/view the control is place on when Context Selection is made
         */
        "bindSelf"?: boolean;
        /**
          * Bind views on Context Selection. Only supported when the control is on a window with childViews
         */
        "bindViews"?: boolean;
        /**
          * Support setting context group by Querystring: ?contextGroupId=green
         */
        "isQueryStringEnabled"?: boolean;
        /**
          * What should the tooltip show for joining the context group? Use {0} to represent where the group id should go
         */
        "joinText"?: string;
        /**
          * What should the tooltip show for leaving the context group? Use {0} to represent where the group id should go
         */
        "leaveText"?: string;
        /**
          * What should the delay be before switching to the list of context groups
         */
        "listDelay"?: number;
        /**
          * What should the tooltip show for the currently selected context group? Use {0} to represent where the group id should go
         */
        "selectedText"?: string;
        /**
          * Should the list of available options show when clicked or hovered?
         */
        "showListOnClick"?: boolean;
        /**
          * What should the no context group selected color be
         */
        "unselectedColor"?: string;
        /**
          * What should the tooltip show when no context group is selected
         */
        "unselectedText"?: string;
    }
    interface IntrinsicElements {
        "fin-context-group-picker": FinContextGroupPicker;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "fin-context-group-picker": LocalJSX.FinContextGroupPicker & JSXBase.HTMLAttributes<HTMLFinContextGroupPickerElement>;
        }
    }
}
